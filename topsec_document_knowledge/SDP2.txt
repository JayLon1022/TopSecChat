软件定义边界工作组的官网地址是：https://cloudsecurityalliance.org/research/working-groups/software-defined-perimeter-and-zero-trust/

本文档的英文版本发布在云安全联盟官网（https://cloudsecurityalliance.org），中文版本发布在云安全联盟大中华区官网（http://www.c-csa.cn）。您可以在满足以下要求的情况下在个人计算机上下载、存储、展示、查看和打印此文档：（1）本文仅可用于个人信息获取，不得用于商业用途；（2）本文内容不得篡改；（3）不得对本文进行转发或散布；（4）不得删除文中商标、版权声明或其他声明。在遵循美国版权法相关条款的情况下合理使用本文内容，使用时请注明引用于云安全联盟。

序言
为深入贯彻落实国家关于建设网络强国、数字中国、智慧社会的战略部署，在各行业主管部门的监督和政策指引下，信息化水平快速提升，构筑全方位的网络安全体系也成为网络安全的核心任务。自2019年工信部发布的《关于促进网络安全产业发展的指导意见(征求意见稿)》中，零信任安全首次被列入“网络安全需要突破的关键技术”，零信任SDP技术架构被行业广泛探索和采用。随着各行各业应用实践的不断深入，SDP的标准规范也应随之发展。此次发布的SDP2.0标准规范充分考虑了这些年零信任SDP的技术发展和行业需求，更好地满足数字化安全的未来发展。

此次发布的SDP2.0标准规范是一次国际协作的成果，CSA大中华区零信任工作组组长陈本峰与其他国际上的零信任安全专家共同编写了该标准规范，我国的国密算法也作为推荐的加密算法首次进入SDP标准规范。SDP为网络运营者提供动态灵活的边界功能部署能力，聚焦于保护关键的组织资产，实现精准授权，降低网络攻击的可能性。SDP是零信任原则不可分割的一部分，它帮助零信任安全实现最小授权原则，隐蔽网络和资源。

信息安全是动态发展的，新技术不断推陈出新，SDP是在传统技术生态中迭代形成的一套技术架构，它是多种网络安全技术的整合，包括密码技术、网络技术、访问控制技术和软件开发技术等。SDP适用场景也非常广泛，包括云计算、物联网、大数据、工业互联网、移动互联网等，为SDP体系架构的发展提供了更多的可能。

在“后疫情时代”的背景下，网络资源快速开发和利用，远程办公、线上教育、勒索病毒、网络攻击、网络诈骗等对我们的管理能力提出了严峻挑战。面对网络环境的复杂变化，SDP2.0体系的应用将为网络空间的健康发展起到重要的支撑作用。本规范通过通俗易懂的语言向大家介绍了SDP2.0的体系架构、部署模型、访问流程等，期望您在读完本规范后能够对SDP有更为清晰的理解，并帮助您更快完成应用实践。

李雨航  
CSA 大中华区主席兼研究院院长

致谢
本文档《软件定义边界（SDP）标准规范2.0》由CSA软件定义边界工作组专家编写，CSA大中华区秘书处组织翻译并审校。感谢以下单位对本文档的支持与贡献：
- 云深互联（北京）科技有限公司
- 中国信息通信研究院
- 北京奇虎科技有限公司
- 腾讯云计算（北京）有限责任公司
- 华为技术有限公司
- 启明星辰信息技术集团股份有限公司
- 深信服科技股份有限公司
- 安易科技（北京）有限公司
- 中国电信研究院安全技术研究所
- 北京山石网科信息技术有限公司
- 北京天融信网络安全技术有限公司
- 上海安几科技有限公司
- 北京中宇万通科技股份有限公司
- 北京北森云计算股份有限公司
- 江苏易安联网络技术有限公司
- 北京赛虎网络空间安全技术发展有限公司

英文版本编写专家
主编：Jason Garbis, Juanita Koilpillai  
参编作者：Junaid Islam, Bob Flores, Daniel Bailey, Benfeng Chen（陈本峰），Eitan Bremler, Michael Roza, Ahmed Refaey Hussein  
特别鸣谢：Larry Hughes  
评审人：Alistair Cockeram, Takahiro Ono, T Prasad, Nya Murray, Michael Rash  
CSA分析师：Shamun Mahmud  
CSA全球工作人员：Claire Lehnert  

软件定义边界（SDP）和零信任工作组是国际云安全联盟（CSA）研究工作组，倡导并促进零信任安全理念的采用。该工作组就如何将零信任理念应用于云和非云环境提供了实用且合理的指导。该工作组将以NIST零信任研究成果和方法论为基础并加以利用，推荐SDP作为零信任安全理念应用的基本架构。该工作组将不断获取和编纂基于行业经验的丰富知识，并修订和扩展SDP规范。最后，SDP工作组认识到对SDP采取包容性方法的必要性。因此，该工作组支持替代架构，只要这些架构符合零信任原则。

在此感谢以上专家。如译文有不妥当之处，敬请读者联系CSA GCR秘书处给予指正！联系邮箱：research@c-csa.cn；云安全联盟CSA公众号。

献辞
谨以本文纪念胡安妮塔·库尔皮拉（Juanita Koilpillai），她是一位安全领域的领导者、影响者、导师和朋友。胡安妮塔是所在领域的杰出人物，在成为两家成功初创企业的创始人和首席执行官的道路上突破了诸多无形障碍。Juanita将她的知识分享给从事技术工作的年轻女性作为指导，以回报社区。Juanita在IEEE女性组织（IEEE WIE）中发挥了重要的指导作用，还创建了一个慈善基金纪念她的父亲，并创立了MERGE这一支持当地青年项目的非营利组织。Juanita在撰写此书以及其他CSA、IEEE和NIST出版物方面发挥了重要作用。

目录
序言
致谢
献辞
1. 介绍
1.1 意义
1.2 范围
1.3 读者
2. SDP设计
2.1 SDP概念
2.2 SDP的架构和组件
2.3 SDP部署模型
2.4 SDP工作流程
2.5 IH加载流程示例
2.6 单包授权（SPA）
2.7 组件之间的传输层双向认证
2.8 设备校验
2.9 软件定义边界SDP与物联网设备
2.10 访问策略
3. SDP协议
3.1 接受主机AH-控制器协议
3.2 IH-控制器协议
3.3 IH–AH协议
3.4 日志
总结
参考文献
附录A：SDP，SDN和NFV
附录B：OSI/SDP组件映射

介绍
软件定义边界（SDP）架构提供了动态灵活的网络安全边界部署能力，以在不安全网络上对应用和服务进行隔离。SDP提供了隔离的、按需的和动态配置的可信逻辑层，缓解来自企业内外部的网络攻击。SDP对未经授权实体进行资产隐藏，建立信任后才允许连接，并通过单独的控制平面和数据平面管理整个系统。企业借助SDP，可以实现零信任安全的目标，并且建立有效性和弹性的安全体系，从而摆脱传统（且基本无效）的基于物理边界防御的模型。

该规范是对国际云安全联盟CSA的软件定义边界工作组（SDPWG）于2014年4月发布的《软件定义边界（SDP）标准规范V1.0》的升级。尽管初版的规范是完整的，但没有充分讨论组件加载流程、保护非人类实体（Non-Person Entities）等方面的问题。此外，自SDPv1发布以来，SDP架构得到业界广泛认可，并包含在我们现在所说的零信任理念中。相比初版，本次修订版本的SDP标准规范进行了扩展和加强（包括对内容的添加、澄清和延展），并反映了当前最新的零信任行业状态。

值得一提的是，该修订版基于SDP工作组发布的SDPv1及后期发布的其他文档进行修订，特别是基于《SDP术语表》和《SDP架构指南》。这两个文档的链接在本文的“参考文献”章节。

范围
该标准规范包含了SDP的架构组件、交互流程和基础安全通信协议，重点关注控制平面如何在安全边界内授权安全连接，以及数据平面如何在发起主机（IH）和接受主机（AH）（服务器、设备、服务）之间实现安全连接。

读者
本标准规范的目标受众是：
- 在企业中部署零信任和SDP产品的解决方案架构师和安全主管
- 在方案中使用SDP架构实施零信任安全理念的供应商和技术提供商

设计
SDP的目标是让企业安全架构师、网络提供商和应用程序所有者能够：
- 部署动态的“软件定义”边界
- 隐藏网络和资源
- 防止非授权访问企业的服务
- 实施以身份为中心的访问策略模型

SDP将物理的安全设备替换为安全逻辑组件，无论组件部署在何处，都在企业的控制之下，从而最大程度地收缩逻辑边界。SDP执行零信任原则，即强制执行最小特权访问、假设被入侵，以及“信任但验证”，仅在认证和身份验证成功后，基于策略来授权对资源的访问。

SDP的设计初衷是为IPv4和IPv6网络提供有效且易于集成的安全架构，包括对控制平面组件的保护和访问控制。SDP为跨数据平面通信的机密性和完整性提供保障，还包括一个“需知访问”模型，要求在经过设备验证和身份认证（用户和非人类实体NPE）成功之后才能以加密方式登录到边界网络。

SDP的设计理念上提供多个层次的无缝集成，包括用户、用户设备、网络和设备的安全。SDP适用于任何基于IP的基础设施，无论是基于硬件的传统网络、软件定义网络（SDN），还是基于云计算的基础设施。SDP的双向验证隧道实际上是一个加密层，可以部署在任何一种IP网络之上。因此，SDP能将多个异构的环境统一成通用的安全层，从而简化网络、安全和运维。

对于云计算基础设施，SDP在OSI网络模型七层中的五层集成了安全性，即：
- 网络层：在该层以虚拟化的方式提供计算、存储和监测。
- 传输层：在该层云API将虚拟化资产与资源池和用户联系起来。
- 会话层：该层用于管理底层虚拟化基础设施。
- 表示层：该层用中间件来管理应用层和应用。
- 应用层：为用户提供商业价值。

未集成SDP的OSI层是数据链路层和物理层，TCP/IP网络模型将这两层合并为网络层。有关SDP和分层网络模型的更多信息，请参见附录B。

作为SDN和网络功能虚拟化（NFV）的补充，SDP可以保护SDN创建的基于IP的网络连接。基于过往的反馈以及《SDP标准规范1.0》实施中的经验教训，本次更新的《SDP标准规范2.0》将进一步阐明上一版本标准规范中定义的以及《SDP架构指南》白皮书中阐述的各种部署模型中的访问控制问题。

SDP提供了一个显著更好的方法预防、监测和应对针对应用程序和基础设施的各种网络攻击及跨域攻击。SDP通过尽可能缩小攻击面、采用最小特权原则实现这一点，即使用户通过不受信任的公共网络（如互联网）访问资源也能得到保护。传统的网络安全解决方案侧重于保护网络和系统的安全，而SDP侧重于以身份为中心保护数字资产。从传统边界防护转变到SDP，使企业能够更加从容地应对DDoS、凭证失窃和对企业资源的勒索软件等攻击。

概念
SDP聚焦于保护组织机构的关键资源，而非组织机构的边界。它能够为网络的所有层面定义和执行基于风险的、动态的、以身份为中心的、且上下文感知的访问策略。SDP为定义和执行访问策略提供了基础，这些策略对于业务、应用程序和网络的负责人来说意义重大，尤其在组织机构内第一次实施的时候。

SDP能够为应用程序和企业资源所有者提供的边界防护能力有：
- 可以将服务安全部署到假定被入侵的网络上（即“假定被入侵”）。
- 通过不受信任的网络访问企业资源时，可以精细化调整用户身份权限。一个典型的用例是替换VPN。

SDP使用由应用负责人控制操作的逻辑组件取代了传统边界防御设备（通常是物理的）。SDP通过访问策略进行设备认证和身份验证后，才允许用户对应用程序的访问。

SDP背后的原理并非全新的。美国国防部（DoD）和美国情报机构（IC）内的多个组织，已经实施构建了相应的网络架构，即访问网络之前先进行身份验证和授权。通常在机密或“高端”网络（如国防部定义的网络）中，所有服务器都隐藏在远程访问网关设备后面，用户必须完成身份验证，才能被授予服务的可见权限并开放访问通道。SDP借鉴了机密网络中使用的逻辑模型，将其合并进入标准工作流程。多年来，相关安全负责人逐步达成了对这些概念的共识，最具代表性的开端就是2004年举办的Jericho论坛。近期，在美国国家标准与技术研究院（NIST）中定义的零信任架构中也包含了这些原则。

SDP保留了上述“需知”（最小特权）模型的优点，同时克服了必须借助远程访问网关设备的不足。事实上，SDP访问控制设计的初衷是面向所有用户，而不仅仅是远程用户。SDP要求任何终端在获得对受保护的服务器和相关服务的网络访问权之前，首先要进行终端的身份验证和鉴权，然后就在请求系统和应用程序之间实时创建加密连接。概括来说，SDP可以在对相关资源（如用户、设备和服务）完成安全验证后，允许其在一个特定边界中访问所需的服务，这些服务对未经授权的资源保持不可见。

架构和组件
简单来说，SDP由两个逻辑组件构成：SDP主机和SDP控制器。SDP主机，通常是全栈主机或轻量级服务，可以发起或接受连接。这些动作由SDP控制器管理，通过控制平面上的安全信道交互。数据则通过数据平面中单独的安全信道进行通信。控制平面与数据平面分离，实现系统架构的灵活性且高度可扩展性。此外，出于规模化或可用性的目的，所有组件均可以进行冗余部署。

SDP控制器的设计初衷是用于管理所有的身份验证和访问流程。SDP控制器本质上是整个解决方案的“大脑”，负责定义和评估相应访问策略。它充当零信任架构下的策略决策点（PDP职能）。SDP控制器负责与企业身份验证方（例如，身份提供商IdP、多因子身份验证MFA服务）的通信，统一协调身份验证和授权分发。它是一个中心控制点，用于查看和审计所有被访问策略定义的合法连接。

发起主机（IH）可以是用户设备或非人类实体（NPE），例如，硬件（如终端用户设备或服务器）、网络设备（用于网络连接）、软件应用程序和服务等。SDP用户可以使用SDP客户端或浏览器来发起SDP连接。接受主机（AH）是逻辑组件，通常被放置在受SDP保护的应用程序、服务和资源的前端。AH充当零信任架构下的策略执行点（PEP职能）。PEP通常由具备SDP功能的软件或硬件实现。它根据SDP控制器的指令来执行网络流量是否允许发送到目标服务（可能是应用程序、轻量级服务或资源）。从逻辑上讲，AH可以与目标服务部署在一起或者分布在不同网络上。

这些SDP组件可以部署在本地或云上，出于扩容或可用性目的可以进行冗余部署。以下我们详细介绍每个组件：

1）SDP控制器
SDP控制器是一个关于策略的定义、验证和决策的组件（零信任架构中的策略决策点PDP），其维护的信息包括：哪些身份（如用户和组）可以通过哪些设备访问组织架构中的服务（本地或云中）。它决定了哪些SDP主机可以相互通信。

一旦用户（在IH上）连接到控制器，控制器将对该用户进行身份验证，并根据用户的上下文（包括身份和设备属性）判定是否允许其访问被授权的服务（通过AHs）。为了对用户进行身份验证，控制器可以使用内部用户表或者连接到第三方的身份和访问管理（IAM）服务（本地或云中）执行认证，并且可以加上多因子认证（MFA）。身份验证方式通常基于不同用户类型和身份。例如，企业员工可以通过身份验证提供商进行身份验证，而外部承包商可以通过存储在数据库中的凭据或使用联合身份进行身份验证。

为了对用户访问服务进行授权，控制器可以使用内部的“用户到服务”映射策略模型，或第三方服务：如LDAP、活动目录（AD）或其他授权解决方案（本地或云上的）。授权通常由用户角色和细粒度信息决定：基于用户或设备属性，或者用户被授权访问的实际数据元素/数据流。实际上，SDP控制器所维护的访问控制策略可以由其他组织型的数据结构（如企业服务目录和标识存储）来输入。通过这种方式，SDP控制器实现了NIST定义的零信任原则中的动态零信任策略。

此外，控制器可以从外部服务获取信息，例如地理位置信息或主机验证服务，以进一步验证（在IH上的）用户。此外，控制器可以向其他网络组件提供上下文信息，例如有关用户身份验证失败或访问敏感服务的信息。

SDP控制器与零信任PDP概念组件密切相关。根据SDP架构的配置需求，它可以部署在云上或本地。SDP控制器由单包授权（SPA）协议的隔离机制保护，使其对未授权的用户和设备不可见和不可达。该机制可以由控制器前端的SDP网关提供，也可以由控制器本身提供。

2）SDP发起主机IH
SDP的发起主机IH与SDP控制器通信，以便开启通过AH接受主机来访问受保护的公司资源的过程。控制器通常要求IH在认证阶段提供用户身份、硬件或软件清单以及设备健康状况等信息。控制器还必须为IH提供某种机制（如凭证密钥），以便IH与AH建立安全通信。

IH的形式可以是安装在终端用户机器上的客户端程序或Web浏览器。使用客户端程序可以提供更丰富的能力，例如主机检查（设备安全状态检查）、流量路由和更便捷的身份验证。发起主机（IH）最重要的作用之一是使用SPA启动连接，本文稍后将对此进行详细讨论。在某些实现中，SPA报文可能由基于浏览器的SDP客户端生成。IH可以是人类用户的设备（如员工或承包商的计算机或移动设备）、应用程序（如胖客户端）或物联网（IoT）设备（如远程水表）。在刚刚的最后一个例子（远程水表）中，其身份是一个非人类身份，但还是需要经过身份验证和授权。

3）SDP接受主机AH
接受主机（AH）是SDP策略执行点（PEP），用于隐藏企业资源（或服务）以及实施基于身份的访问控制。AH可以位于本地、私有云、公共云等各种环境中。受AH保护的服务不仅限于Web应用程序；可以是任何基于TCP或UDP的应用程序，例如SSH、RDP、SFTP、SMB或胖客户端访问的专有应用程序。

默认情况下，对AH的任何网络访问都被阻止，只有经过身份验证和授权的实体才能访问。如上所述，AH可以与目标服务部署在一起，或者分布在不同的网络上。这些模型如图示所示。接受主机（AH）从SDP控制器接收控制信息，并只接受经过控制器确认的那些发起主机（IH）的连接请求。利用从控制器接收到的控制信息，接受主机（AH）保证只有经过授权的发起主机（IH，包括用户和设备）才能访问到受保护的服务。接受主机（AH）作为安全通信的交换站，从发起主机（IH）接收访问流量然后转发到被保护的后端服务。后端服务的响应信息通过接受主机（AH）返回到发起主机（IH）。

SDP是一个面向连接的逻辑层协议，可以用来保护多种网络拓扑架构。下图介绍了多种SDP部署模型和架构的细节。它们在《SDP架构指南》中有详细的说明，阐述了不同部署模型下各个SDP组件的配置。

部署模型
SDP把客户端（包括人类和非人类实体）连接到资源（在下图中资源被描述为服务器）。资源可以是任意类型能被网络访问到的服务。它可以是在物理服务器中或虚拟机中运行的服务，或是在IaaS、PaaS平台上运行的服务或容器化的服务。本节概述了六种SDP部署模型。尽管不同模型使用了不同的网络拓扑，但在逻辑上提供了同样的价值，都是对受保护的资源进行严格的访问限制。

下图中，蓝线表示被双向认证加密协议（如mTLS协议和IKE协议等）保护的网络连接，从而可以抵御中间人攻击（MITM）。灰线表示使用应用程序原有协议的网络连接，这些连接可能是加密的，也可能是未加密的。在图表中为了表述简单，省略了SDP控制器。其中有部分部署模型用到了SDP网关。SDP网关是SDP接受主机（AH）的软件程序，为受保护的后端服务提供隔离性和访问控制能力。

客户端-网关模型
当一个或多个服务器需要被SDP网关保护时，不论底层网络拓扑如何，发起主机（IH）和接受主机（AH，网关）之间的通信连接将会被加密保护。在客户端-网关模型中，网关可以被远程访问，但同时也是隐藏的，从而提供了安全边界。这个模型不需要受保护服务器侧进行任何改造。

客户端-服务器模型
当一个组织机构需要端到端的安全通信的时候，客户端-服务器模型将服务器和接受主机（AH）绑定在同一个主机上。在这个模型中，服务器隐藏在安全边界内，服务器端必须要安装一个SDP软件，用来实现客户接受主机（AH）的功能。

服务器-服务器模型
服务器-服务器模型下，不论底层网络拓扑如何，可以保证所有服务器之间的通信连接全部经过加密来保护。在这个模型下，服务器都隐藏在安全边界内。

客户端-服务器-客户端模型
在一些点对点的通信场景中（如VOIP、聊天和视频会议服务等），点对点的流量都通过中间服务器来转发。在这个模型下，服务器隐藏在安全边界内。

客户端-网关-客户端模型
客户端-网关-客户端模型是客户端-服务器-客户端模型的变体。这个模型支持在点对点网络协议下，由一个客户端直接向其他客户端连接的场景中执行访问控制策略。在这个模型下，网关都隐藏在安全边界内。

网关-网关模型
网关-网关模型很适合用于某些物联网场景。在这个模型下，网关都隐藏在安全边界内。

工作流程
一般来说，SDP组件工作流程通常分为两种独立的类型：加载（Onboarding）流程（每个组件均有独立流程）和访问流程（在多个组件之间协调）。就定义而言，每个SDP组件都有一个单独的加载（Onboarding）流程，并参与多个访问流程。以下所述的工作流程只是代表一般情况，因为在不同的SDP实现方案和不同的SDP部署模型之间的细节会有所不同。

1）控制器加载（Onboarding）流程
每个SDP系统都需要一个或多个控制器。为了让加载流程得以成功，至少必须保证有一个控制器在任何时候都是可用的。一些SDP实现方案中，需要一个始终在线的控制器使访问流程获得成功。控制器必须是可从其他任何SDP组件的运行位置进行网络访问。因此，它们通常是可通过互联网在全球范围内可达，但仅限于获得授权的用户/设备。

控制器的工作流如下：一个初始的（主要的）SDP控制器被引入服务，并连接到适当的、可选的身份验证和授权服务。SDP控制器应该时刻在线，以便对任何其他SDP组件随时可用。如有必要，也可以让后续更多的控制器上线，并使用相同的组织机构的专属配置，以及来自初始控制器的初始化参数（配置）信息加载。

为了实现负载均衡和冗余，许多SDP的实现方案会支持控制器集群部署。任何SDP实现方案都必须支持这样一种机制：后续的控制器可以加入集群，连接到集群内的其他控制器，并共享或访问任何当前的状态信息。这种机制依赖于具体实现方案，本文不进行详细讨论。

2）接受主机（AH）加载流程
每个SDP系统都需要一个或多个接受主机AH。它们可以使用上述的任何SDP部署模型进行部署。也就是说，它们可以是独立的网关，也可以作为服务器（资源/业务系统）的一部分部署。AH可以是长期在线的，也可以是短暂的——两者在SDP实施中都是可以接受的。独立网关AH可能寿命较长，运行数月或数年，但也可能是短暂的，如在基于负载进行扩展或收缩的动态网关集群中。

部署在单个服务器（业务系统）中的AH在线时间可长可短。在这种场景下，它们的生命周期将与它们所属的服务器实例的生命周期绑定在一起。服务器实例可以是长期存在的，例如传统的Web或应用服务器；也可以是短期存在的，如DevOps基础设施的一部分服务。

当AH投入使用时，它们必须连接到SDP系统中的一个或多个控制器并进行认证。一旦加载成功，它们就可以接收SPA报文，并处理来自授权IH的访问。任何SDP实现方案都必须支持这样一种机制：所有AH都可以被配置为连接到控制器集群中。许多SDP实现方案都支持AH集群部署，以实现负载均衡和冗余容灾的目的，这是一种比较常见的网关部署模型。

3）发起主机（IH）加载流程
发起主机（IH）可以是用户设备、或非用户操作的系统（如物联网设备或充当IH的服务器）。与SDP系统中的其他所有组件一样，IH也需要加载。在这个流程中，它们首先需要被配置连接到控制器所需的初始参数信息，包括网络信息（主机名或IP地址），以及任何必要的共享密钥（例如，SPA密钥、数字证书）。通常，IH加载流程需要使用到企业身份管理服务供应商，并且在用户设备上需要做用户身份认证。IH只需要加载一次，之后就可以启动访问流程。

4）访问流程
发起主机IH启动访问流程以连接被SDP系统保护的业务系统（资源）。访问流程涉及了SDP全部组件：发起主机IH，控制器，接受主机AH。当已加入的IH重新上线时（例如，在设备重新启动后，或当用户启动连接时），它将连接到SDP控制器进行身份验证。在IH身份验证成功后，SDP控制器会确定该IH有权通过AH通信的服务列表。此时控制器尚未将此列表发送给IH；必须等到后续步骤之后。

SDP控制器指示AH可以接受来自IH的通信，并向AH发送用于建立用户、设备和服务之间双向加密通信所需的信息。SDP控制器向IH提供已授权的AH和服务列表，以及建立双向加密通信所需的任何可选信息。IH使用SPA协议发起与授权AH的连接，首先验证SPA中的信息以确保安全，然后IH建立与AH之间的双向TLS（mTLS）加密连接。

加载流程示例
SDP控制器、IH、AH和用户的加载，根据不同的部署模型以及具体实现方案的不同情况会有差异。SDP系统的创建和运行可以通过应用程序编程接口（API）或管理界面进行。以下时序图是使用了外部身份提供商（IdP）进行身份验证的IH用户加载流程。

单包授权（SPA）
SDP的核心原则之一是，任何未经授权的实体不仅不能访问业务系统（资源），还不得访问SDP基础设施本身。为达到这一目标，要求实体与任何SDP组件连接之前必须要通过基于密码学的授权验证。这种机制提高了SDP的安全性和弹性：未经授权的实体无法与SDP组件建立网络连接，因此无法尝试漏洞利用、无法尝试暴力破解或利用被盗的用户账密。

SDP中实现这个目标的机制就是单包授权（SPA）。SDP版的SPA是基于RFC4226 HMAC的一次性密码“HOTP”。SPA在SDP中实现的主要原则如下：
- 隐藏SDP系统组件：控制器和AH不会对来自远程系统的任何连接尝试作出反应，直到它们提供了对该SDP系统合法可信的SPA报文。
- 减轻对TLS的拒绝服务攻击：SPA可以让服务器在产生建立TCP或TLS连接的开销之前快速拒绝未经授权的连接尝试。
- 攻击检测：从任何其他主机发往控制器或AH的第一个报文必须是SPA报文。如果AH收到任何其他报文，则应将其视为攻击。

关于最小化服务暴露面，另一个值得注意事项是AH和控制器的DNS枚举攻击。请注意，为了提高SPA协议的安全性和弹性，下文中推荐的SPA消息格式相比SDP标准规范v1版做了改进和更新。

组件之间的传输层双向认证
SDP在建立连接的过程中需要进行多层次的安全校验。第一步是SPA，其次就是本章节的主题，要求双向认证，作为分布式SDP组件之间建立安全加密连接的关键步骤。其他更多的步骤，包括设备和用户安全校验，将在后面讨论。

设备校验
上个章节阐述的传输层双向认证方案可以证明SDP的访问设备拥有一个未过期且未被吊销的私钥，但不校验设备是否满足安全或配置要求。设备校验的目的是证明设备符合安全要求。

软件定义边界与物联网设备
NIST 800-207文档中的有两个核心零信任原则：系统必须确保“所有数据源和计算服务”以及“所有通信”的安全访问。因此，零信任安全必须包括物联网设备。广义上物联网（IoT）的概念，不仅包括在大多数IT环境中存在的设备（如打印机、IP摄像头和VOIP电话），而且还包含更专业的设备，如环境或医疗传感器或工业控制系统。

访问策略
零信任的核心理念是通过访问策略对受保护资源进行访问控制。NIST零信任架构文档的一个核心原则明确指出：“对资源的访问由动态策略决定，其中包括客户身份、应用程序/服务和请求资产的可观察状态，还可能包括其他行为和环境属性。”网络安全与基础设施安全局（CISA）零信任成熟度模型讨论了策略如何从成熟度传统级别的静态策略，转变到高级级别的跨域输入和输出，再到最优级别的“基于自动/观察触发器的动态策略”。

但考虑到零信任架构和企业需求的访问请求多样性，很难定义一个有效的、广泛适用的策略模型框架和相关词汇表。定义一个普遍适用的零信任策略模型的结构和词汇表是一件充满挑战的事情。SDP架构则更具体化，尽管不同SDP部署模型之间存在差异，但我们认为它非常适合结构化策略模型。

协议
这里定义的SDP协议包括四个部分: AH–控制器协议、IH–控制器协议、IH–AH协议和日志。下文描述的SDP协议展示了在SDP组件之间使用SPA进行通信，但它不是统一的，因为不同的SDP部署模型将需要不同的交互和消息。这里的目标是展示一个可运行的典型系统，而不是指定固定或标准化的消息格式。

接受主机AH-控制器协议
接受主机连接控制器的协议时序图如图所示。基于UDP的SPA报文是第一个报文，确保SDP控制器免受未经授权的访问。

日志
日志的目的是为了确定服务的可用性和性能，以及服务器的安全性，它是所有系统和零信任实现方案的必须要求。所有日志均应包含以下基本字段：时间、事件名称、严重等级、设备地址等。

安全/连接日志是SDP的核心，在更广泛的场景下对于检测大规模的针对基础设施的攻击也很重要。因此将安全日志转发给安全信息和事件管理（SIEM）系统是非常有用的。它们是零信任实现方案的必要条件。

活动特征标识（signature_id）是一个标识符，使之可以识别事件的类型。第三列包含需要记录的具体消息的额外字段。

以上是对SDP标准规范的整体描述，涵盖了其架构、设计、组件、协议以及实施细节，期望对读者在理解和实施SDP提供借鉴和帮助。